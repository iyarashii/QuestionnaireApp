@page
@model QuestionnaireApp.Pages.Questionnaires.IndexModel
@using QuestionnaireApp.Models
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Questionnaires";
    User user = await UserManager.GetUserAsync(User);
}

<h1>Questionnaires</h1>

<p>
    @if (User.HasClaim(Constants.IsAdminClaim.Type, Constants.IsAdminClaim.Value))
    {
        <a asp-page="Create">Create New</a>
    }
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Questionnaires[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Questionnaires[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Questionnaires[0].DueDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{ foreach (var item in Model.Questionnaires)
            {

                var targetedGroups = item.Targets;
                if(User.HasClaim(Constants.IsAdminClaim.Type, Constants.IsAdminClaim.Value))
                {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DueDate)
                    </td>
                    <td>
                        <a asp-page="./FillOut" asp-route-id="@item.ID">Fill Out</a> |
                        <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                        <a asp-page="./Results" asp-route-id="@item.ID">Results</a> |
                        <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
                    </td>
                </tr>
                }
                else if (targetedGroups.Any())
                {
                    foreach (var qgroup in targetedGroups)
                    {
                        if (qgroup.Group.UserGroups.Select(ug => ug.UserID).Contains(user.Id))
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Title)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Description)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DueDate)
                                </td>
                                <td>
                                @* TODO: add a way to hide fill out for users that filled out the questionnaire already *@    
                                <a asp-page="./FillOut" asp-route-id="@item.ID">Fill Out</a>
                                </td>
                            </tr>
                            break;
                        }
                    }
                }
            }
        }
    </tbody>
</table>
